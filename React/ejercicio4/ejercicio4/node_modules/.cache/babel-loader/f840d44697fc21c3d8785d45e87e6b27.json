{"ast":null,"code":"var _jsxFileName = \"/home/mlupa/Documents/CSA/React/ejercicio4/ejercicio4/src/ToDos.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ToDos() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const handleDelete = (e, id) => {\n    console.log(e.target.id);\n    setTodos(todos.filter(item => item.id !== id));\n  };\n\n  const handleToggle = (e, index) => {\n    if (e.target.tagName !== \"button\") {\n      setTodos(prevTodos => prevTodos.map((prevTodo, idx) => idx === index ? { ...prevTodo,\n        complete: !prevTodo.complete\n      } : prevTodo));\n    }\n  };\n\n  useEffect(() => {\n    async function apiRequest() {\n      const request = fetch(\"https://jsonplaceholder.typicode.com/todos\");\n      const response = await request;\n      const data = await response.json();\n      const resumedData = data.splice(0, 5);\n      setTodos(resumedData);\n      console.log(resumedData);\n    }\n\n    apiRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group \",\n      children: todos.map((_ref, index) => {\n        let {\n          id,\n          title,\n          complete\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: e => handleToggle(e, id),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `${complete ? \"toggle\" : \"\"}`,\n            children: [index, \" - \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDelete(e, id),\n            className: \"btn btn-danger\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ToDos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ToDos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDos\");","map":{"version":3,"sources":["/home/mlupa/Documents/CSA/React/ejercicio4/ejercicio4/src/ToDos.js"],"names":["useState","useEffect","Input","ToDos","todos","setTodos","handleDelete","e","id","console","log","target","filter","item","handleToggle","index","tagName","prevTodos","map","prevTodo","idx","complete","apiRequest","request","fetch","response","data","json","resumedData","splice","title"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,YAAY,GAAG,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASH,EAArB;AACAH,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAHD;;AAKA,QAAMM,YAAY,GAAG,CAACP,CAAD,EAAIQ,KAAJ,KAAc;AACjC,QAAIR,CAAC,CAACI,MAAF,CAASK,OAAT,KAAqB,QAAzB,EAAmC;AACjCX,MAAAA,QAAQ,CAAEY,SAAD,IACPA,SAAS,CAACC,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,KACZA,GAAG,KAAKL,KAAR,GACI,EAAE,GAAGI,QAAL;AAAeE,QAAAA,QAAQ,EAAE,CAACF,QAAQ,CAACE;AAAnC,OADJ,GAEIF,QAHN,CADM,CAAR;AAOD;AACF,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqB,UAAf,GAA4B;AAC1B,YAAMC,OAAO,GAAGC,KAAK,CAAC,4CAAD,CAArB;AACA,YAAMC,QAAQ,GAAG,MAAMF,OAAvB;AACA,YAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,YAAMC,WAAW,GAAGF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAe,CAAf,CAApB;AACAxB,MAAAA,QAAQ,CAACuB,WAAD,CAAR;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,WAAZ;AACD;;AACDN,IAAAA,UAAU;AACX,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEjB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBACGD,KAAK,CAACc,GAAN,CAAU,OAA0BH,KAA1B;AAAA,YAAC;AAAEP,UAAAA,EAAF;AAAMsB,UAAAA,KAAN;AAAaT,UAAAA;AAAb,SAAD;AAAA,4BACT;AAAI,UAAA,OAAO,EAAGd,CAAD,IAAOO,YAAY,CAACP,CAAD,EAAIC,EAAJ,CAAhC;AAAA,kCACE;AAAG,YAAA,SAAS,EAAG,GAAEa,QAAQ,GAAG,QAAH,GAAc,EAAG,EAA1C;AAAA,uBACGN,KADH,SACae,KADb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,OAAO,EAAGvB,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIC,EAAJ,CAD9B;AAEE,YAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAA8CA,EAA9C;AAAA;AAAA;AAAA;AAAA,gBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAqBD;;GApDuBL,K;;KAAAA,K","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\";\n\nexport default function ToDos() {\n  const [todos, setTodos] = useState([]);\n\n  const handleDelete = (e, id) => {\n    console.log(e.target.id);\n    setTodos(todos.filter((item) => item.id !== id));\n  };\n\n  const handleToggle = (e, index) => {\n    if (e.target.tagName !== \"button\") {\n      setTodos((prevTodos) =>\n        prevTodos.map((prevTodo, idx) =>\n          idx === index\n            ? { ...prevTodo, complete: !prevTodo.complete }\n            : prevTodo\n        )\n      );\n    }\n  };\n\n  useEffect(() => {\n    async function apiRequest() {\n      const request = fetch(\"https://jsonplaceholder.typicode.com/todos\");\n      const response = await request;\n      const data = await response.json();\n      const resumedData = data.splice(0, 5);\n      setTodos(resumedData);\n      console.log(resumedData);\n    }\n    apiRequest();\n  }, []);\n  return (\n    <>\n      <h1>Todo List</h1>\n      <Input setTodos={setTodos} />\n      <ul className=\"list-group \">\n        {todos.map(({ id, title, complete }, index) => (\n          <li onClick={(e) => handleToggle(e, id)} key={id}>\n            <p className={`${complete ? \"toggle\" : \"\"}`}>\n              {index} - {title}\n            </p>\n            <button\n              onClick={(e) => handleDelete(e, id)}\n              className=\"btn btn-danger\"\n            >\n              X\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}